#include "Automobil.h"

int main()
{
	char miesto_autobaz[30], znacka_typ_auta[30];
	int Rok, Cislo, Cena;
	int Pocet;
	int i = 0, j = 0;
	double sum = 0;

	Automobil objekty[5];

	cout << "Vlozte pocet (max. 3):  ";
	cin >> Pocet;

	if ((Pocet > 3) || (Pocet == 0))
		cout << "Zly pocet" << endl;

	else
	{
		while (i < Pocet)
		{
			i++;
			cout << endl << "vlozte Miesto " << i << ". auta      : ";
			cin >> miesto_autobaz;
			cout << "vlozte Znacku " << i << ". auta : ";
			cin >> znacka_typ_auta;
			cout << "vlozte Rok " << i << ". auta : ";
			cin >> Rok;
			cout << "vlozte Cislo " << i << ". auta : ";
			cin >> Cislo;
			cout << "vlozte Cenu " << i << ". auta : ";
			cin >> Cena;


			objekty[i].SetMiesto(miesto_autobaz);
			objekty[i].SetZnacka(znacka_typ_auta);
			objekty[i].SetRok(Rok);
			objekty[i].SetCislo(Cislo);
			objekty[i].SetCena(Cena);

		}

		i++;
		objekty[i].SetMiesto((char*)"Trnava");
		objekty[i].SetZnacka((char*)"Nissan_Primera");
		objekty[i].SetRok(2006);
		objekty[i].SetCislo(10020);
		objekty[i].SetCena(3300);

		sum += objekty[i].GetCena(); // do sum pripocitame cenu posledneho auta Nissan Primera

		cout << endl << endl;

		cout << "programom vytvoreny a inicializovany objekt auta pomocou parametrickeho konstruktora triedy 'Automobil': " << endl;
		cout << "Miesto autobazara s pred. autom: " << objekty[i].GetMiesto() << endl;
		cout << "Znacka a typ auta : " << objekty[i].GetZnacka() << endl;
		cout << "Rok vyroby auta    : " << objekty[i].GetRok() << endl;
		cout << "predajne cislo auta  : " << objekty[i].GetCislo() << endl;
		cout << "predajna cena auta [Eur]   : " << objekty[i].GetCena() << endl;
		cout << endl << "_______________________________________________________________" << endl;

		cout << "hodnoty instan. premennych objektov triedy 'Automobil' (aut), vlozene pouzivatelom programu: " << endl;
		for (i = 1; i < Pocet + 1; i++)
		{
			cout << "Miesto autobazara s pred. autom: " << objekty[i].GetMiesto() << endl;
			cout << "Znacka a typ auta: " << objekty[i].GetZnacka() << endl;
			cout << "Rok vyroby auta   : " << objekty[i].GetRok() << endl;
			cout << "predajne cislo auta  : " << objekty[i].GetCislo() << endl;
			cout << "predajna cena auta [Eur]   : " << objekty[i].GetCena() << endl;
			cout << endl << "_______________________________________________________________" << endl;

			sum += objekty[i].GetCena(); // do sum pripocitavame postupne cenu vozidiel zadanych uzivatelom
		}

	}

	cout << "Priemerna predajna cena uvedenych 4-roch aut je: " << (sum / (Pocet + 1)) << endl;

	return 0;
}







#include "Automobil.h"

Automobil::Automobil(char *miesto, char *znacka, int rok, int cislo, long int  cena)
{
	strcpy(Automobil::miesto_autobaz, miesto);
	strcpy(Automobil::znacka_typ_auta, znacka);
	Automobil::rok_vyroby_auta = rok;
	Automobil::predaj_cis_auta = cislo;
	Automobil::cena_auta = cena;
}

void Automobil::SetMiesto(char *Place)
{
	strcpy(miesto_autobaz, Place);
}
char *Automobil::GetMiesto()
{
	return miesto_autobaz;
}

void Automobil::SetZnacka(char *Brand)
{
	strcpy(znacka_typ_auta, Brand);
}
char *Automobil::GetZnacka()
{
	return znacka_typ_auta;
}

void Automobil::SetRok(int Year)
{
	rok_vyroby_auta = Year;
}
int Automobil::GetRok()
{
	return rok_vyroby_auta;
}

void Automobil::SetCislo(int Number)
{
	predaj_cis_auta = Number;
}
int Automobil::GetCislo()
{
	return predaj_cis_auta;
}

void Automobil::SetCena(long int Price)
{
	cena_auta = Price;
}
long int  Automobil::GetCena()
{
	return cena_auta;
}





#include <iostream>
using namespace std;

class Automobil
{
private:
	char miesto_autobaz[30];
	char znacka_typ_auta[30];
	int rok_vyroby_auta;
	int predaj_cis_auta;
	long int cena_auta;
public:
	Automobil() {}
	Automobil(char *miesto, char *znacka, int rok, int cislo, long int  cena);

	char *GetMiesto(); //ziskame hodnoty parametrov
	char *GetZnacka();
	int GetRok();
	int GetCislo();
	long int  GetCena();

	void SetMiesto(char *Place);
	void SetZnacka(char *Brand);
	void SetRok(int Year);
	void SetCislo(int Number);
	void SetCena(long int  Price);
};







#include<time.h>
#define VYMEN(a, b) { long tmp = a; a = b; b = tmp; }
#include<iostream>
using namespace std;

/*int NajdiCisloL(int velkost_pola, int hladane_cislo, long *pole)
{
	for (int i = 0; i < velkost_pola; i++)
	{
		if (pole[i] == hladane_cislo)
		{
			return i;
		}
	}

	return -1;
}
*/

int NajdiCisloL(int x, int pole[], int dlzka)
{
	int i = 0;
	while (i < dlzka && pole[i] != x)
		i++;
	if (i < dlzka)
		return i;
	else
		return -1;
}


int main()
{
	int x, dlzka;

	int stat_pole[100];
	int i = 0;

	cout << "vlozte velkost prehladavanej casti pola \"stat_pole\" max (100): ";
	cin >> dlzka;

	srand((unsigned)time(NULL));

	for (i = 0; i < dlzka; i++)
		stat_pole[i] = (double)rand() / (RAND_MAX + 1) * 80 + 1; //tato cast vygerenuje nahodne cisla do pola

	cout << dlzka << " vygenerovanych prvkov pola \"stat_pole\"" << endl;
	for (i = 0; i < dlzka; i++)
		cout << "stat_pole[" << i << "] = " << stat_pole[i] << endl;

	cout << endl;

	cout << "vlozte hladane cislo v zobrazenej casti pola \"stat_pole\":" << endl;
	cin >> x;

	int index;
	index = NajdiCisloL(x, stat_pole, dlzka); 
	//index = stat_pole[i];
	if (index > -1)
	{
		cout << "Index prvku pola \"stat_pole\" obsahujuci hladane (najdene linearnym vyhladavanim) cislo: " << x << " je : " << index << endl;
	}
	else
	{
		cout << "Hladane cislo: " << x << " sa nenachadza v poli \"stat_pole\"" << endl;
	}

	return 0;
}



//TREBA DOROBIT KED JE VIAC ZHODNYCH CISEL
